(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{471:function(n,t,s){"use strict";s.r(t);var a=s(2),e=Object(a.a)({},(function(){var n=this,t=n.$createElement,s=n._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[s("h1",{attrs:{id:"mysql高级系列之触发器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mysql高级系列之触发器"}},[n._v("#")]),n._v(" mysql高级系列之触发器")]),n._v(" "),s("h2",{attrs:{id:"mysql触发器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mysql触发器"}},[n._v("#")]),n._v(" mysql触发器")]),n._v(" "),s("blockquote",[s("p",[n._v("我们先理解下为什么有触发器，用来干嘛的。沉下心来看完第一段再看后面的就感觉没啥难度了。（理解最重要）")]),n._v(" "),s("p",[n._v("触发器见名知意，不是用手来打开的是用脚来开启的。意思在于我们不是主动去进行调用而是我们执行特定的行为时去触发的；这个理解很关键，捕鼠器，捕兽夹，地雷这些东西。没有一种生物去愿意踩这玩意。除非脑子有泡。接下来就可以来看什么是触发器了")])]),n._v(" "),s("p",[n._v("触发器创建的时候我们需要给出具体的 "),s("strong",[n._v("时间")]),n._v(" , "),s("strong",[n._v("地点")]),n._v(",什么"),s("strong",[n._v("情况")]),n._v("下， 要搞的"),s("strong",[n._v("事情")]),n._v("，主要有以下这四个。")]),n._v(" "),s("table",[s("thead",[s("tr",[s("th",[n._v("要素名字")]),n._v(" "),s("th",[n._v("要素参数")])])]),n._v(" "),s("tbody",[s("tr",[s("td",[n._v("地点（监控的表）")]),n._v(" "),s("td",[n._v("tableName（表名）")])]),n._v(" "),s("tr",[s("td",[n._v("事件（触发的情况）")]),n._v(" "),s("td",[n._v("insert/update/delete")])]),n._v(" "),s("tr",[s("td",[n._v("时间")]),n._v(" "),s("td",[n._v("before/after")])])])]),n._v(" "),s("blockquote",[s("p",[s("strong",[n._v("解释")]),n._v("：\n"),s("strong",[n._v("地点")]),n._v(":为为哪一个表添加触发器。\n"),s("strong",[n._v("事件")]),n._v(":为执行那种方法时，只能有增删改可以触发\n"),s("strong",[n._v("时间")]),n._v(":指的是在增删改操作之前还是之后")])]),n._v(" "),s("p",[n._v("核心语句格式(第一边看肯定看起来很累，结合下面的demo就秒懂了)：\nCREATE TRIGGER "),s("strong",[n._v("trigger_name")]),n._v(" "),s("strong",[n._v("trigger_time")]),n._v(" "),s("strong",[n._v("trigger_event")]),n._v(" ON  "),s("strong",[n._v("tb_name")]),n._v(" FOR EACH ROW  "),s("strong",[n._v("trigger_stmt")])]),n._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[n._v("➢ trigger_name：触发器的名称；\n➢ tirgger_time：触发时机，为 BEFORE 或者 AFTER；\n➢ trigger_event：触发事件，为 INSERT、DELETE 或者 UPDATE； \n➢ tb_name：表示建立触发器的表名，在哪张表上建立触发器； \n➢ trigger_stmt：触发器的程序体，可以是一条 SQL 语句或者是用 BEGIN 和 END 包含的多条语句； \n➢ FOR EACH ROW 表示任何一条记录上的操作满足触发事件都会触发该触发器。\n")])])]),s("p",[n._v("注意：对同一个表相同触发时间和相同触发事件，只能定义一个触发器。（也就是说，一个表在不同的事件和时间上最后只能有六个触发器，增加前，增加后，修改前，修改后，删除前，删除后），补充： 触发器中的sql为一个事物，在begin和end中要么都成功要么都失败 （"),s("a",{attrs:{href:"https://www.baidu.com/s?wd=mysql%E4%BA%8B%E5%8A%A1",target:"_blank",rel:"noopener noreferrer"}},[n._v("什么是事物？"),s("OutboundLink")],1),n._v("）")]),n._v(" "),s("h3",{attrs:{id:"案例demo"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#案例demo"}},[n._v("#")]),n._v(" 案例Demo")]),n._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[n._v("-- 注意 DELIMITER $$ 的使用 不懂看存储过程的那篇\nCREATE TABLE `product` (\n`pid` int(11) NOT NULL AUTO_INCREMENT COMMENT '商品编号',\n`pname` varchar(255) NOT NULL COMMENT '商品名称',\n`num` int(11) NOT NULL COMMENT '库存',\nPRIMARY KEY (`pid`)\n) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8;\n\nINSERT INTO `product` VALUES ('1', 'p30', '10');\nINSERT INTO `product` VALUES ('2', 'mate20', '50');\nINSERT INTO `product` VALUES ('3', 'nova5', '100');\n\n\n-- 创建触发器\nDELIMITER $$ \nCREATE TRIGGER mytg1 AFTER INSERT ON product FOR EACH ROW\n-- 如果语句只有一行 可以直接写在 FOR EACH ROW 后面可以不用 begin 和 end\nBEGIN\n\tupdate product set num = num+1 where pid=1;\nEND $$\nDELIMITER;\n-- 往商品表插入记录\n\tINSERT INTO `product` VALUES ('4', 'nova5', '100');\n-- 查询商品表商品库存更新情况\nselect * from product;\n\n触发器中还可以声明临时变量；\n")])])]),s("h3",{attrs:{id:"理论部分"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#理论部分"}},[n._v("#")]),n._v(" 理论部分")]),n._v(" "),s("p",[n._v("（结合开始的那就话很容易就理解了，对了 面试会问哦）")]),n._v(" "),s("p",[n._v("什么时触发器？\n触发器是和表关联的特殊的存储过程，可以在插入，删除或修改表中的数据时触发执行，比数据库本身标准的功能有更精细和更复杂的数据控制能力。")]),n._v(" "),s("p",[n._v("触发器的"),s("strong",[n._v("优点")]),n._v("（抄的别人的）：")]),n._v(" "),s("ul",[s("li",[n._v("SQL触发器提供了检查数据完整性的替代方法。")]),n._v(" "),s("li",[n._v("SQL触发器可以捕获数据库层中业务逻辑中的错误。")]),n._v(" "),s("li",[n._v("SQL触发器提供了运行计划任务的另一种方法。通过使用SQL触发器，您不必等待运行计划的任务，因为在对表中的数据进行更改之前或之后自动调用触发器。")]),n._v(" "),s("li",[n._v("SQL触发器对于审核表中数据的更改非常有用。")])]),n._v(" "),s("p",[n._v("触发器的"),s("strong",[n._v("缺点")]),n._v("：")]),n._v(" "),s("ul",[s("li",[n._v("增加程序的复杂度，有些业务逻辑在代码中处理，有些业务逻辑用触发器处理，会使后期维护变得困难；")])]),n._v(" "),s("p",[n._v("触发器的作用：\n➢ 安全性：可以基于数据库的值使用户具有操作数据库的某种权利。例如不允许下班后和节假日修改数据库数据；\n➢ 审计：可以跟踪用户对数据库的操作；\n➢ 实现复杂的数据完整性规则。例如，触发器可回退任何企图吃进超过自己保证金的期货；\n➢ 提供了运行计划任务的另一种方法。例如，如果公司的帐号上的资金低于 5 万元则立即给财务人员发送警告数据。")]),n._v(" "),s("h3",{attrs:{id:"高级部分"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#高级部分"}},[n._v("#")]),n._v(" 高级部分")]),n._v(" "),s("blockquote",[s("p",[n._v("新旧数据的处理")])]),n._v(" "),s("p",[n._v("首先我们想一下，作为触发器在某时刻捕获到了一个sql语句。")]),n._v(" "),s("blockquote",[s("p",[n._v("语句： UPDATE table01 SET name = '李大麻子' WHERE id = 1\n原数据：原来id = 1 的name的值为 张大胆子")])]),n._v(" "),s("p",[n._v("假如该语句执行时触发了触发器。那我们怎么表示新来的数据 '李大麻子' 和原来的 '张大胆子' 呢？")]),n._v(" "),s("p",[n._v("这就用到了 NEW  和 OLD 关键字了。\n直接上代码")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("--  创建表\nCREATE TABLE `class` (\n  `cId` int(11) DEFAULT NULL,\n  `cName` varchar(30) DEFAULT NULL,\n  `tName` varchar(30) DEFAULT NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\n\n\n-- 该触发器为前置 在更新语句执行前触发的  new 代表着将要更新也就是新来的数据，old代表着原来的老数据\nDELIMITER$$\nCREATE TRIGGER table01_trigger BEFORE UPDATE ON `class`  \nFOR EACH ROW\nBEGIN\n-- 触发器 嫌弃李大麻子太丑不要他\nIF NEW.`tName` = '李大麻子' THEN\nSET NEW.`tName` = OLD.`tName`;\nEND IF;\nEND$$\nDELIMITER ;\n\n-- \t执行  看看结果\nUPDATE  class SET tName = '李大麻子' WHERE `cId` = 1\n\n-- 执行再 看看结果\nUPDATE  class SET tName = '隔壁老王' WHERE `cId` = 1\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br"),s("span",{staticClass:"line-number"},[n._v("17")]),s("br"),s("span",{staticClass:"line-number"},[n._v("18")]),s("br"),s("span",{staticClass:"line-number"},[n._v("19")]),s("br"),s("span",{staticClass:"line-number"},[n._v("20")]),s("br"),s("span",{staticClass:"line-number"},[n._v("21")]),s("br"),s("span",{staticClass:"line-number"},[n._v("22")]),s("br"),s("span",{staticClass:"line-number"},[n._v("23")]),s("br"),s("span",{staticClass:"line-number"},[n._v("24")]),s("br"),s("span",{staticClass:"line-number"},[n._v("25")]),s("br")])]),s("p",[n._v("教程卒！")])])}),[],!1,null,null,null);t.default=e.exports}}]);